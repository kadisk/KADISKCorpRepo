{
    "params" : [
        "socket", 
        "serverName",
        "repositoryStorageFilePath",
        "serviceStorageFilePath",
        "myServicesManagerImportedSourceCodeDirPath",
        "servicesInstanceDataDirPath",
        "installDataDirPath",
        "ecosystemDefaultsFileRelativePath"
    ],
    "services": [
        {
            "namespace": "@@/server-service",
            "dependency": "@/server-manager.service/services/HTTPServerService",
            "params":{
                "name":"{{serverName}}",
                "port": "{{socket}}"
            }
        },
        {
            "namespace": "@@/ecosystemdata-handler-service",
            "dependency": "@/ecosystem-control-panel.service/services/EcosystemDataHandlerService",
            "params":{
                "installDataDirPath": "{{installDataDirPath}}"
            }
        },
        {
            "namespace": "@@/container-manager-service",
            "dependency": "@/container-manager.service/services/ContainerManager"
        },
        {
            "namespace": "@@/service-orchestrator-service",
            "dependency": "@/service-orchestrator.service/services/ServiceOrchestratorManager",
            "bound-params":{
                "containerManagerService":"@@/container-manager-service",
                "repositoryStorageManagerService": "@@/repository-storage-manager-service"
            },
            "params":{
                "serviceStorageFilePath": "{{serviceStorageFilePath}}",
                "instanceDataDirPath": "{{servicesInstanceDataDirPath}}"
            }
        },
        {
            "namespace": "@@/repository-storage-manager-service",
            "dependency": "@/repository-storage-manager.service/services/RepositoryStorageManager",
            "params":{
                "ecosystemDefaultsFileRelativePath": "{{ecosystemDefaultsFileRelativePath}}",
                "importedRepositoriesSourceCodeDirPath": "{{myServicesManagerImportedSourceCodeDirPath}}",
                "repositoryStorageFilePath": "{{repositoryStorageFilePath}}"
            },
            "bound-params":{
                "extractTarGzLib":"@/extract-tar-gz.lib",
                "loadMetatadaDirLib": "@/load-metatada-dir.lib",
                "ecosystemdataHandlerService": "@@/ecosystemdata-handler-service",
                "jsonFileUtilitiesLib": "@/json-file-utilities.lib"
            }
        }
    ],
    "endpoints": [
        {
            "dependency": "@/server-manager.webservice/endpoint-group",
            "bound-params":{
               "serverServiceForController":"@@/server-service",
               "serverService": "@@/server-service"
            }
        },
        {
            "dependency": "@//endpoint-group",
            "bound-params":{
                "serverService": "@@/server-service",
                "myServicesManagerService": "@@/service-orchestrator-service"
            },
            "params":{
                "needsAuth": true
            }
        }
    ]
}